{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","Container2","flex","fd","jc","ai","test","Container3","Container4","Container5","Container6","TextTitle","p","TextDescription","StyledButton","button","bg","color","StyledButton2","StyledButton3","StyledRoundButton","StyledImg","img","StyledLink","header","nav","theme","mobile","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","DISCORD","TWITTER","WEBSITE","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","backgroundColor","boxShadow","width","paddingLeft","paddingRight","margin","alt","src","textAlign","fontWeight","fontSize","target","href","Number","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","length","substring","slice","padding","border","borderSpacing","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96995eeb.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n\n\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary1);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: auto;\n  min-height: 82vh;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 5px;\n  width: 4px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"row\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-end\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-end\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const Container2 = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"row\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"center\")};\n  align-items: ${({ ai }) => (ai ? ai : \"center\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100;\n  max-width: auto;\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const Container3 = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: right;\n  align-items: right;\n  width: auto;\n  background-size: cover;\n  padding-left: 20px;\n  background-position: center;\n`;\nexport const Container4 = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: right;\n  width: auto;\n  background-size: cover;\n  padding-left: 20px;\n  background-position: center;\n`;\nexport const Container5 = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: auto;\n  background-size: cover;\n  padding-left: 20px;\n  background-position: center;\n`;\nexport const Container6 = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"center\")};\n  align-items: ${({ ai }) => (ai ? ai : \"center\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100;\n  max-width: auto;\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 20px;\n  font-weight: 10;\n  line-height: 1.3;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 15px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 15px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect, updateAccount } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\n\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n border-radius: 0px;\n  border: none;\n  box-shadow: 0 0 0px rgba(0, 0, 0, 0.15);\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 700;\n  padding: 15px 241px;\n  background-color: ${({ bg }) => bg || '#0001'};\n  color: ${({ color }) => color || '#333'};\n  &:hover {\n    opacity: 0.9;\n    transform: scale(0.98);\n  }\n`;\nexport const StyledButton2 = styled.button`\n border-radius: 0px;\n  border: none;\n  box-shadow: 0 0 0px rgba(0, 0, 0, 0.15);\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 700;\n  padding: 15px 221px;\n  background-color: ${({ bg }) => bg || '#0001'};\n  color: ${({ color }) => color || '#333'};\n  &:hover {\n    opacity: 0.9;\n    transform: scale(0.98);\n  }\n`;\n\nexport const StyledButton3 = styled.button`\n border-radius: 50px;\n  border: none;\n  box-shadow: 0 0 0px rgba(0, 0, 0, 0.15);\n  cursor: pointer;\n  font-size: 18px;\n  font-weight: 400;\n  padding: 15px 25px;\n  background-color: ${({ bg }) => bg || '#0001'};\n  color: ${({ color }) => color || '#333'};\n  &:hover {\n    opacity: 0.9;\n    transform: scale(0.98);\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border: none;\n  background-color: ${({ bg }) => bg || '#0001'};\n  padding: 0px;\n  font-size: 20px;\n  font-weight: 7000;\n  color: var(--primary-text);\n  width: 259px;\n  height: 50px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 0px 0px 0px rgba(250, 250, 250, 0.15);\n  -webkit-box-shadow: 0px 0px 0px 0px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 0px 0px 0px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n  color: ${({ color }) => color || '#333'};\n  &:hover {\n    opacity: 0.9;\n    transform: scale(0.96);\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 50%;\n  @media (min-width: 767px) {\n    width: 50%;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  width: 650px;\n  @media (min-width: 650px) {\n    \n\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n  border-radius: 0px;\n  border: none;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 500;\n  padding: 0px 15px;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  background-color: ${({ bg }) => bg || '#fff'};\n \n  &:hover {\n    opacity: 0.9;\n    transform: scale(0.98);\n  }\n`;\n\n\nexport const StyledHeader10 = styled.header`\n  background-color: white;\n  padding: 25px;\n  height: 10px;\n  align-content: center;\n`\n\nexport const Container10 = styled.div`\n  width: 1000px;\n  max-width: 100%;\n  padding: 0 20px;\n  margin: 0 auto;\n`\n\nexport const Button10 = styled.button`\n  border-radius: 0px;\n  border: none;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.15);\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 700;\n  padding: 15px 60px;\n  background-color: ${({ bg }) => bg || '#fff'};\n  color: ${({ color }) => color || '#333'};\n  &:hover {\n    opacity: 0.9;\n    transform: scale(0.98);\n  }\n`\n\nexport const Nav = styled.nav`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 40px;\n  @media (max-width: ${({ theme }) => theme.mobile}) {\n    flex-direction: column;\n  }\n`\n\nexport const Logo10 = styled.img`\nwidth: 30%;\n@media (min-width: 767px) {\n    width: 20%;\n  \n  }\n`\n\nexport const Flex = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Hugo Owens Nolan is now ready to mint.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    DISCORD:\"\",\n    TWITTER:\"\",\n    WEBSITE:\"\",\n    SHOW_BACKGROUND: false,\n    \n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `${CONFIG.NFT_NAME} is now yours! Visit Opensea.io to view it.`\n          \n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n  \n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 3) {\n      newMintAmount = 3;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  \n\n  return (\n    <s.Screen>\n         \n          <s.Container2\n            flex={1}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"(var(--accent))\",\n              boxShadow: \"0px 0px 0px 0px rgba(0,0,0,0.15)\",\n              width: \"auto\",\n              paddingLeft: \"20px\",\n              paddingRight: \"20px\",\n              margin: \"10px\",\n            }}\n          >\n          \n             <StyledImg alt={\"example\"} src={\"/config/images/back.png\"} />\n             \n             <s.Container3>\n               \n            <s.Container4>\n            <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\", fontWeight:\"thin\", fontSize: 24,}}\n                >\n                The Nolan Collection\n                </s.TextTitle>\n                </s.Container4>\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 60,\n                fontWeight: \"thin\",\n                color: \"var(--accent-text)\",\n                \n              }}\n            >\n              <s.Container3>{data.totalSupply} / {CONFIG.MAX_SUPPLY} </s.Container3>\n               \n              \n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                \n              </StyledLink>\n            </s.TextDescription>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                \n                <s.SpacerXSmall />\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  \n                </s.TextDescription>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container3 ai={\"right\"} jc={\"right\"}>\n                    \n                    <s.Container5>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network to start minting.\n                    </s.TextDescription>\n                    </s.Container5>\n                    <s.SpacerSmall />\n                    <StyledButton2\n                    \n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                     \n\n                    </StyledButton2>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.Container5>\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                        </s.Container5>\n                      </>\n                    ) : null}\n                  </s.Container3>\n                ) : (\n                  <>\n                  <s.Container3>\n                    <s.TextTitle\n                    style={{ textAlign: \"center\", color: \"var(--accent-text)\", fontWeight: \"bold\" }}\n                  >\n                    1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                    {CONFIG.NETWORK.SYMBOL}\n\n                    \n                  </s.TextTitle>\n\n                  <s.SpacerSmall/>\n                  <s.SpacerSmall/>\n\n                  <s.Container6>\n                  <StyledButton3>\n\n                  Connected Wallet: {truncate(blockchain.account,5)}\n                  {(blockchain.account).slice(38)}\n\n                  </StyledButton3>\n                  </s.Container6>\n\n                  </s.Container3>\n                  <s.SpacerSmall/>\n                  <s.Container5>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    </s.Container5>\n                    <s.SpacerMedium />\n\n\n                    <s.Container4>\n                    <s.TextDescription\n                    \n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                          padding: \"10px\",\n                          border: \"1px solid black\",\n                          borderSpacing: \"100px\",\n                          width: \"521px\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      </s.Container4>\n\n                      <s.SpacerSmall/>\n\n                    <s.Container4 ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.15 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerSmall/>\n                      <StyledRoundButton\n                      \n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container4>\n                    <s.SpacerSmall />\n                    <s.Container3 ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        \n                        }}\n                      >\n                        \n                        {claimingNft ? \"BUSY\" : \"MINT\"}\n                        \n                      </StyledButton>\n                      </s.Container3>\n                    \n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n            </s.Container3>\n          </s.Container2>\n          \n     \n          \n        \n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\nimport reactDom from \"react-dom\";\n\nReactDOM.render(\n  \n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}